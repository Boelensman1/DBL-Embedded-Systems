@C 3ffff 000a4
0001f       ; 00000 begin :         BRA main
3e5ff       ; 00001 _pressed :      STOR R4 [--R7]
0a103       ; 00002                 LOAD R4 R3
0a802       ; 00003                 LOAD R5 2
00208       ; 00004                 BRS _pow
09905       ; 00005                 LOAD R3 R5
0a8f0       ; 00006                 LOAD R5 -16
0a4a7       ; 00007                 LOAD R4 [R5+7]
26103       ; 00008                 DIV R4 R3
2a002       ; 00009                 MOD R4 2
0a904       ; 0000a                 LOAD R5 R4
0a5f1       ; 0000b                 LOAD R4 [R7++]
045f1       ; 0000c                 RTS
16000       ; 0000d _pow :          CMP R4 0
0040e       ; 0000e                 BEQ _pow1
16001       ; 0000f                 CMP R4 1
0040e       ; 00010                 BEQ _powR
3ddff       ; 00011                 STOR R3 [--R7]
3e5ff       ; 00012                 STOR R4 [--R7]
12001       ; 00013                 SUB R4 1
09905       ; 00014                 LOAD R3 R5
1a903       ; 00015 _powLoop :      MULS R5 R3
12001       ; 00016                 SUB R4 1
16000       ; 00017                 CMP R4 0
00401       ; 00018                 BEQ _powReturn
001fb       ; 00019                 BRA _powLoop
0a5f1       ; 0001a _powReturn :    LOAD R4 [R7++]
09df1       ; 0001b                 LOAD R3 [R7++]
045f1       ; 0001c                 RTS
0a801       ; 0001d _pow1 :         LOAD R5 1
045f1       ; 0001e                 RTS
045f1       ; 0001f _powR :         RTS
08045       ; 00020 main :          LOAD R0 loop
0c105       ; 00021                 ADD R0 R5
08810       ; 00022                 LOAD R1 16
3c420       ; 00023                 STOR R0 [R1+0]
0a8f0       ; 00024                 LOAD R5 -16
08000       ; 00025                 LOAD R0 0
104ad       ; 00026                 SUB R0 [R5+13]
3c4ad       ; 00027                 STOR R0 [R5+13]
08000       ; 00028                 LOAD R0 0
08800       ; 00029                 LOAD R1 0
09000       ; 0002a                 LOAD R2 0
08800       ; 0002b                 LOAD R1 0
09000       ; 0002c                 LOAD R2 0
09800       ; 0002d                 LOAD R3 0
08800       ; 0002e                 LOAD R1 0
09000       ; 0002f                 LOAD R2 0
3d4c8       ; 00030                 STOR R2 [R6+(counter+0)]
00000       ; 00031                 BRA init
0c801       ; 00032 init :          ADD R1 1
0c800       ; 00033                 ADD R1 intensity
3c5c1       ; 00034                 STOR R0 [R6+R1]
10800       ; 00035                 SUB R1 intensity
14807       ; 00036                 CMP R1 7
00402       ; 00037                 BEQ conditional0
001f9       ; 00038 return0 :       BRA init
001e6       ; 00039                 BRA main
0a8f0       ; 0003a conditional0 :  LOAD R5 -16
0a000       ; 0003b                 LOAD R4 0
124ad       ; 0003c                 SUB R4 [R5+13]
3e4ad       ; 0003d                 STOR R4 [R5+13]
0a080 003e8 ; 0003e                 LOAD R4 WAIT
3e4ad       ; 00040                 STOR R4 [R5+13]
05808       ; 00041                 SETI 8
00000       ; 00042                 BRA emptyLoop
001ff       ; 00043 emptyLoop :     BRA emptyLoop
001db       ; 00044                 BRA main
0a8f0       ; 00045 loop :          LOAD R5 -16
0a000       ; 00046                 LOAD R4 0
124ad       ; 00047                 SUB R4 [R5+13]
3e4ad       ; 00048                 STOR R4 [R5+13]
0a080 003e8 ; 00049                 LOAD R4 WAIT
3e4ad       ; 0004b                 STOR R4 [R5+13]
05808       ; 0004c                 SETI 8
094c8       ; 0004d                 LOAD R2 [R6+(counter+0)]
0d001       ; 0004e                 ADD R2 1
15080 003e8 ; 0004f                 CMP R2 1000
00406       ; 00051                 BEQ conditional1
3d4c8       ; 00052 return1 :       STOR R2 [R6+(counter+0)]
088ff       ; 00053                 LOAD R1 -1
09800       ; 00054                 LOAD R3 0
0a000       ; 00055                 LOAD R4 0
00003       ; 00056                 BRA getValues
025f1       ; 00057                 RTE
09001       ; 00058 conditional1 :  LOAD R2 1
001f8       ; 00059                 BRA return1
0c801       ; 0005a getValues :     ADD R1 1
14800       ; 0005b                 CMP R1 0
0040a       ; 0005c                 BEQ conditional2
14800       ; 0005d return2 :       CMP R1 0
0060c       ; 0005e                 BNE conditional3
2900a       ; 0005f return3 :       MOD R2 10
15104       ; 00060                 CMP R2 R4
0160d       ; 00061                 BMI conditional4
094c8       ; 00062 return4 :       LOAD R2 [R6+(counter+0)]
14807       ; 00063                 CMP R1 7
00411       ; 00064                 BEQ conditional5
001f4       ; 00065 return5 :       BRA getValues
001b9       ; 00066                 BRA main
0a8f0       ; 00067 conditional2 :  LOAD R5 -16
0a4a6       ; 00068                 LOAD R4 [R5+6]
26019       ; 00069                 DIV R4 25
001f2       ; 0006a                 BRA return2
0c800       ; 0006b conditional3 :  ADD R1 intensity
0a5c1       ; 0006c                 LOAD R4 [R6+R1]
10800       ; 0006d                 SUB R1 intensity
001f0       ; 0006e                 BRA return3
3ddff       ; 0006f conditional4 :  STOR R3 [--R7]
0a101       ; 00070                 LOAD R4 R1
0a802       ; 00071                 LOAD R5 2
0039a       ; 00072                 BRS _pow
09df1       ; 00073                 LOAD R3 [R7++]
0d905       ; 00074                 ADD R3 R5
001ec       ; 00075                 BRA return4
0a8f0       ; 00076 conditional5 :  LOAD R5 -16
0a103       ; 00077                 LOAD R4 R3
3e4ab       ; 00078                 STOR R4 [R5+11]
08800       ; 00079                 LOAD R1 0
00000       ; 0007a                 BRA checkButtons
15001       ; 0007b checkButtons :  CMP R2 1
0060b       ; 0007c                 BNE conditional6
0c801       ; 0007d return6 :       ADD R1 1
3ddff       ; 0007e                 STOR R3 [--R7]
09901       ; 0007f                 LOAD R3 R1
00380       ; 00080                 BRS _pressed
09df1       ; 00081                 LOAD R3 [R7++]
16801       ; 00082                 CMP R5 1
00406       ; 00083                 BEQ conditional7
14807       ; 00084 return7 :       CMP R1 7
0061c       ; 00085                 BNE conditional11
025f1       ; 00086 return11 :      RTE
00198       ; 00087                 BRA main
025f1       ; 00088 conditional6 :  RTE
001f3       ; 00089                 BRA return6
0c800       ; 0008a conditional7 :  ADD R1 intensity
0a5c1       ; 0008b                 LOAD R4 [R6+R1]
10800       ; 0008c                 SUB R1 intensity
0e001       ; 0008d                 ADD R4 1
3ddff       ; 0008e                 STOR R3 [--R7]
09800       ; 0008f                 LOAD R3 0
00370       ; 00090                 BRS _pressed
09df1       ; 00091                 LOAD R3 [R7++]
16801       ; 00092                 CMP R5 1
00404       ; 00093                 BEQ conditional8
1600b       ; 00094 return8 :       CMP R4 11
00604       ; 00095                 BNE conditional9
001ed       ; 00096 return9 :       BRA return7
00188       ; 00097                 BRA main
12002       ; 00098 conditional8 :  SUB R4 2
001fa       ; 00099                 BRA return8
160ff       ; 0009a conditional9 :  CMP R4 -1
00602       ; 0009b                 BNE conditional10
001f9       ; 0009c return10 :      BRA return9
00182       ; 0009d                 BRA main
0c800       ; 0009e conditional10 : ADD R1 intensity
3e5c1       ; 0009f                 STOR R4 [R6+R1]
10800       ; 000a0                 SUB R1 intensity
001fa       ; 000a1                 BRA return10
001d8       ; 000a2 conditional11 : BRA checkButtons
001e2       ; 000a3                 BRA return11

@D 3ffff 00009 ; 
00000 00000 00000 00000 00000 00000 00000 00000 ;                 
00000                                           ;   

@S 3ffff 000f0

.
